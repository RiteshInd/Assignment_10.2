1. Use the below given data set
Data Set:https://archive.ics.uci.edu/ml/datasets/Weight+Lifting+Exercises+monitored+with+Inertial+Measurement+Units
2. Perform the below given activities:
a. Create classification model using different random forest models
b. Verify model goodness of fit
c. Apply all the model validation techniques
d. Make conclusions
e. Plot importance of variables

setwd("D:/R")
library(readr)
Weight_lift <- read.csv("Weightlift.csv")
View(Weight_lift)
str(Weight_lift)
data<-Weight_lift
# load libraries
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(lattice)
library(rattle)

library(C50)
#install.package('devtools') # Only needed if you dont have this installed.
library(devtools)
install_github('adam-m-mcelhinney/helpRFunctions')
library(helpRFunctions)
names(data)
dim(data)
pairs(data[1:10])
# enable multi-core processing
library(doParallel)
cl <- makeCluster(detectCores())
registerDoParallel()
set.seed(12345)
dataTrain<-data[1:4004,]
dataTest<-data[4005:4024,]
head(dataTrain)
head(dataTest)
indexNA <- as.vector(sapply(dataTrain[,1:158],function(x) {length(which(is.na(x)))!=0}))
dataTrain <- dataTrain[,!indexNA]
train_control<- trainControl(method="cv", number=10)

model<- train(classe ~., data=dataTrain,trControl=train_control, method="rf")
model
# make predictions
predictions<- predict(model,dataTrain)
# append predictions
pred<- cbind(dataTrain,predictions)
# summarize results
confusionMatrix<- confusionMatrix(pred$predictions,pred$classe)
confusionMatrix
#how do we create a cross validation scheme
control <- trainControl(method = 'repeatedcv',
                        number = 10,
                        repeats = 3)
seed <-7
metric <- 'Accuracy'
set.seed(seed)
mtry <- sqrt(ncol(dataTrain))
tunegrid <- expand.grid(.mtry=mtry)
rf_default <- train(pitch_belt~., 
                    data = dataTrain,
                    method = 'rf',
                    metric = 0,
                    tuneGrid = tunegrid,
                    trControl = control)
print(rf_default)
#-------------------------------

# make predictions
predictions<- predict(rf_default,dataTest)
# append predictions
pred<- cbind(dataTest,predictions)
# summarize results
confusionMatrix<- confusionMatrix(pred$predictions,pred$classe)
confusionMatrix
varImp(rf_default)
#----------------
# random search for parameters
control <- trainControl(method = 'repeatedcv',
                        number = 10,
                        repeats = 3,
                        search = 'random')
# make predictions
predictions<- predict(rf_default,dataTest)

# append predictions
pred<- cbind(dataTest,predictions)

# summarize results
#confusionMatrix<- confusionMatrix(pred$predictions,pred$classe)
confusionMatrix
varImp(random)
#--------------------

# Grid search
control <- trainControl(method = 'repeatedcv',
                      number = 10,
                       repeats = 3,
                       search = 'grid')
set.seed(seed)
tunegrid <- expand.grid(.mtry=c(1:80))
mtry <- sqrt(ncol(x))
rf_gridsearch <- train(~., 
                      data = dataTrain[1:200,],
                      method = 'rf',
                       metric = 0,
                      tuneGrid = tunegrid,
                       trControl = control)
print(rf_gridsearch)
plot(rf_gridsearch)
# make predictions
predictions<- predict(rf_gridsearch,dataTest)

# append predictions
pred<- cbind(dataTest,predictions)

# summarize results
confusionMatrix<- confusionMatrix(pred$predictions,pred$pitch_belt)
confusionMatrix
varImp(rf_gridsearch)

---------------------------
  # Boosting
  #  ---------------------------------------
# Boosting model requires three things

#1- a loss function to be optimized
#2- a weak learner to make predictions
#3- an additive model to add the weak learners to minimize the loss function

# gradient boosting
control <- trainControl(method = 'repeatedcv',
                        number = 5,
                        repeats = 3,
                        search = 'grid')

seed <- 7
library(C50)
set.seed(seed)
metric <- 'Accuracy'
gbm_mod <- train(pitch_belt~., 
                 data = dataTrain,
                 method = 'gbm',
                 metric = 0,
                 trControl = control)
print(gbm_mod)
plot(gbm_mod)

summary(gbm_mod)
# make predictions
predictions<- predict(gbm_mod,dataTest)

# append predictions
pred<- cbind(dataTest,predictions)

# summarize results
confusionMatrix<- confusionMatrix(pred$predictions,pred$classe)
confusionMatrix



Random Forest 

4004 samples
 157 predictor
   5 classes: 'A', 'B', 'C', 'D', 'E' 

No pre-processing
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 3604, 3604, 3604, 3604, 3603, 3603, ... 
Resampling results across tuning parameters:

  mtry  Accuracy   Kappa    
    2   0.9730274  0.9617679
   83   1.0000000  1.0000000
  165   0.9990006  0.9985890

Accuracy was used to select the optimal model using the largest value.
The final value used for the model was mtry = 83.

Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 1365    0    0    0    0
         B    0  901    0    0    0
         C    0    0   92    0    0
         D    0    0    0  276    0
         E    0    0    0    0 1370

Overall Statistics
                                     
               Accuracy : 1          
                 95% CI : (0.9991, 1)
    No Information Rate : 0.3422     
    P-Value [Acc > NIR] : < 2.2e-16  
                                     
                  Kappa : 1          
 Mcnemar's Test P-Value : NA         

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000    1.000  1.00000  1.00000   1.0000
Specificity            1.0000    1.000  1.00000  1.00000   1.0000
Pos Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Neg Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Prevalence             0.3409    0.225  0.02298  0.06893   0.3422
Detection Rate         0.3409    0.225  0.02298  0.06893   0.3422
Detection Prevalence   0.3409    0.225  0.02298  0.06893   0.3422
Balanced Accuracy      1.0000    1.000  1.00000  1.00000   1.0000

Random Forest 

4004 samples
 157 predictor

No pre-processing
Resampling: Cross-Validated (10 fold, repeated 3 times) 
Summary of sample sizes: 3602, 3603, 3603, 3603, 3605, 3604, ... 
Resampling results:

  RMSE       Rsquared   MAE      
  0.3719505  0.9996205  0.1836054

Tuning parameter 'mtry' was held constant at a value of 12.56981

Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 1365    0    0    0    0
         B    0  901    0    0    0
         C    0    0   92    0    0
         D    0    0    0  276    0
         E    0    0    0    0 1370

Overall Statistics
                                     
               Accuracy : 1          
                 95% CI : (0.9991, 1)
    No Information Rate : 0.3422     
    P-Value [Acc > NIR] : < 2.2e-16  
                                     
                  Kappa : 1          
 Mcnemar's Test P-Value : NA         

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000    1.000  1.00000  1.00000   1.0000
Specificity            1.0000    1.000  1.00000  1.00000   1.0000
Pos Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Neg Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Prevalence             0.3409    0.225  0.02298  0.06893   0.3422
Detection Rate         0.3409    0.225  0.02298  0.06893   0.3422
Detection Prevalence   0.3409    0.225  0.02298  0.06893   0.3422
Balanced Accuracy      1.0000    1.000  1.00000  1.00000   1.0000

Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 1365    0    0    0    0
         B    0  901    0    0    0
         C    0    0   92    0    0
         D    0    0    0  276    0
         E    0    0    0    0 1370

Overall Statistics
                                     
               Accuracy : 1          
                 95% CI : (0.9991, 1)
    No Information Rate : 0.3422     
    P-Value [Acc > NIR] : < 2.2e-16  
                                     
                  Kappa : 1          
 Mcnemar's Test P-Value : NA         

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000    1.000  1.00000  1.00000   1.0000
Specificity            1.0000    1.000  1.00000  1.00000   1.0000
Pos Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Neg Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Prevalence             0.3409    0.225  0.02298  0.06893   0.3422
Detection Rate         0.3409    0.225  0.02298  0.06893   0.3422
Detection Prevalence   0.3409    0.225  0.02298  0.06893   0.3422
Balanced Accuracy      1.0000    1.000  1.00000  1.00000   1.0000

Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 1365    0    0    0    0
         B    0  901    0    0    0
         C    0    0   92    0    0
         D    0    0    0  276    0
         E    0    0    0    0 1370

Overall Statistics
                                     
               Accuracy : 1          
                 95% CI : (0.9991, 1)
    No Information Rate : 0.3422     
    P-Value [Acc > NIR] : < 2.2e-16  
                                     
                  Kappa : 1          
 Mcnemar's Test P-Value : NA         

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000    1.000  1.00000  1.00000   1.0000
Specificity            1.0000    1.000  1.00000  1.00000   1.0000
Pos Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Neg Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Prevalence             0.3409    0.225  0.02298  0.06893   0.3422
Detection Rate         0.3409    0.225  0.02298  0.06893   0.3422
Detection Prevalence   0.3409    0.225  0.02298  0.06893   0.3422
Balanced Accuracy      1.0000    1.000  1.00000  1.00000   1.0000


Stochastic Gradient Boosting 

4004 samples
 157 predictor

No pre-processing
Resampling: Cross-Validated (10 fold, repeated 3 times) 
Summary of sample sizes: 3602, 3603, 3603, 3603, 3605, 3604, ... 
Resampling results across tuning parameters:

  interaction.depth  n.trees  RMSE      Rsquared   MAE      
  1                   50      3.870491  0.9708972  2.0739488
  1                  100      2.518277  0.9818947  1.1065126
  1                  150      2.258849  0.9850289  0.9958785
  2                   50      2.183970  0.9866430  1.0364026
  2                  100      1.662759  0.9916854  0.8202113
  2                  150      1.485456  0.9934375  0.7464795
  3                   50      1.950370  0.9886048  0.9201246
  3                  100      1.529421  0.9928336  0.7607945
  3                  150      1.330676  0.9946265  0.6793264

Tuning parameter 'shrinkage' was held constant at a value of 0.1
Tuning
 parameter 'n.minobsinnode' was held constant at a value of 10
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were n.trees = 150, interaction.depth =
 3, shrinkage = 0.1 and n.minobsinnode = 10.

Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 1365    0    0    0    0
         B    0  901    0    0    0
         C    0    0   92    0    0
         D    0    0    0  276    0
         E    0    0    0    0 1370

Overall Statistics
                                     
               Accuracy : 1          
                 95% CI : (0.9991, 1)
    No Information Rate : 0.3422     
    P-Value [Acc > NIR] : < 2.2e-16  
                                     
                  Kappa : 1          
 Mcnemar's Test P-Value : NA         

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000    1.000  1.00000  1.00000   1.0000
Specificity            1.0000    1.000  1.00000  1.00000   1.0000
Pos Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Neg Pred Value         1.0000    1.000  1.00000  1.00000   1.0000
Prevalence             0.3409    0.225  0.02298  0.06893   0.3422
Detection Rate         0.3409    0.225  0.02298  0.06893   0.3422
Detection Prevalence   0.3409    0.225  0.02298  0.06893   0.3422
Balanced Accuracy      1.0000    1.000  1.00000  1.00000   1.0000







